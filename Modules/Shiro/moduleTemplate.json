{
    "moduleInfo": {
        "moduleName": "Shiro",
        "moduleInitials": "SI",
        "moduleDesc": "Watch best high-quality episodes in 720p, 1080p on Shiro. Best of all you can Stream all anime for free.",
        "developer": "Jack_",
        "moduleID": "cOd8rjCrzcZ",
        "moduleImage": "https://shiro.is/assets/img/favicon.png",
        "moduleVersion": 1.7,
        "moduleLenguage": "ENG",
        "moduleType": "Video",
        "baseURL": "https://shiro.is/",
        "moduleDeveloperSite": "https://cyborg714.github.io/ketsu/",
        "UpdateSite": "https://raw.githubusercontent.com/Cyborg714/ketsu/main/video/shiro.json",
        "preferedServer": "GOGOSHIRO",
        "preferedDownloadServer": "GOGOSHIRO",
        "blackListed": [
            ""
        ]
    },
    "global": {
        "variables": [
            {
                "key": "",
                "value": ""
            }
        ],
        "cookies": [
            {
                "key": "",
                "value": ""
            }
        ],
        "headers": [
            {
                "key": "",
                "value": ""
            }
        ]
    },
    "mainPage": [
        {
            "request": {
                "url": "https://tapi.shiro.is/anime/random/TV?token=Yopgjtcustomer7NX1Oe",
                "method": "get",
                "headers": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "httpBody": null
            },
            "extra": {
                "commands": [
                    {
                        "commandName": "",
                        "params": [
                            {
                                "key": "",
                                "value": ""
                            }
                        ]
                    }
                ],
                "extraInfo": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            },
            "javascriptConfig": {
                "removeJavascript": true,
                "loadInWebView": false,
                "javaScript": "const DefaultLayouts = { ultraWideFull: 'ultraWideFull', ultraWide: 'ultraWide', wideFull: 'wideFull', wide: 'wide', wideStrechedFull: 'wideStrechedFull', wideStrechedFullDouble: 'WideStrechedFullDouble', wideStreched: 'wideStreched', wideStrechedDouble: 'wideStrechedDouble', wideStrechedFullList: 'wideStrechedFullList', wideStrechedList: 'wideStrechedList', doublets: 'doublets', doubletsDouble: 'doubletsDouble', doubletsFull: 'doubletsFull', doubletsFullDouble: 'doubletsFullDouble', doubletsConstant: 'doubletsConstant', doubletsDoubleConstant: 'doubletsDoubleConstant', doubletsFullConstant: 'doubletsFullConstant', doubletsFullDoubleConstant: 'doubletsFullDoubleConstant', longDoublets: 'longDoublets', longDoubletsDouble: 'longDoubletsDouble', longDoubletsFull: 'longDoubletsFull', longDoubletsFullDouble: 'longDoubletsFullDouble', longDoubletsConstant: 'longDoubletsConstant', longDoubletsDoubleConstant: 'longDoubletsDoubleConstant', longDoubletsFullConstant: 'longDoubletsFullConstant', longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant', triplets: 'triplets', tripletsDouble: 'tripletsDouble', tripletsFull: 'tripletsFull', tripletsFullDouble: 'tripletsFullDouble', tripletsConstant: 'tripletsConstant', tripletsDoubleConstant: 'tripletsDoubleConstant', tripletsFullConstant: 'tripletsFullConstant', tripletsFullDoubleConstant: 'tripletsFullDoubleConstant', longTriplets: 'longTriplets', longTripletsDouble: 'longTripletsDouble', longTripletsFull: 'longTripletsFull', longTripletsFullDouble: 'longTripletsFullDouble', longTripletsConstant: 'longTripletsConstant', longTripletsDoubleConstant: 'longTripletsDoubleConstant', longTripletsFullConstant: 'longTripletsFullConstant', longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant', none: ''};const CellDesings = { Special1: 'Special1', Special2: 'Special2', Special3: 'Special3', CELLHelperText: 'CELLHelperText', small1: 'small1', small2: 'small2', normal1: 'normal1', normal2: 'normal2', normal3: 'normal3', normal4: 'normal4', normal5: 'normal5', normal6: 'normal6', normal7: 'normal7', wide1: 'wide1', wide2: 'wide2', wide3: 'wide3', wide4: 'wide4', wide5: 'wide5', wide6: 'wide6', wide7: 'wide7', wide8: 'wide8', wide9: 'wide9', wide10: 'wide10', wide11: 'wide11'};const Paging = { leading: 'leading', centered: 'centered', none: ''};const Orientation = { horizontal: 'horizontal', vertical: 'vertical'};function MainPage(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data;}function Section(sectionName, separator) { this.sectionName = sectionName; this.separator = separator;}function Layout(insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing) { this.insets = insets; this.visibleCellsWidthS = visibleCellsWidthS; this.visibleCellsWidthM = visibleCellsWidthM; this.visibleCellsWidthL = visibleCellsWidthL; this.visibleCellsHeight = visibleCellsHeight; this.heightForVisibleCells = heightForVisibleCells; this.cellSize = cellSize; this.ratio = ratio; this.constant = constant; this.horizontalSpacing = horizontalSpacing; this.verticalSpacing = verticalSpacing;}function Insets(top, bottom, left, right) { this.top = top; this.bottom = bottom; this.left = left; this.right = right;}function Size(width, height) { this.width = width; this.height = height;}function Ratio(inRelation, number1, number2) { this.inRelation = inRelation; this.number1 = number1; this.number2 = number2;}function Data(image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView;}function quickData(link, image, title, field1) { return new Data(image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link);}function shuffle(a) { var j, x, i; for (i = a.length - 1; i > 0; i--) { j = Math.floor(Math.random() * (i + 1)); x = a[i]; a[i] = a[j]; a[j] = x; } return a;}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);let output = parsedJson.output;let emptyKeyValue = [new KeyValue('', '')];let nextRequest = new ModuleRequest('', 'get', emptyKeyValue, null);const token = '?token=Yopgjtcustomer7NX1Oe';const imageBase = 'https://cdn.shiro.is/';let script = document.querySelector('script').innerHTML.replace('/*', '').replace('*/', '');let data = JSON.parse(script);let featured = [];let latestAnime = [];let latestEpisodes = [];let ongoingAnime = [];let trendingAnime = [];if (parsedJson.request.url.includes('random/TV')) { output = []; const info = data.data; const title = info.name; const image = new ModuleRequest(imageBase + info.image, 'get', emptyKeyValue, null); const link = new ModuleRequest('https://tapi.shiro.is/anime/slug/' + info.slug + token, 'get', emptyKeyValue, null); const type = info.type ? info.type : ''; const rating = info.rating ? info.rating : ''; var obj = new Data(image, title, 'unknown', title, type + ' - ' + rating, 'unknown', 'unknown', false, link); featured.push(obj); let topLayout = new Layout(new Insets(0, 0, 0, 0), 1, 2, 4, 1, 500, new Size(400, 400), new Ratio('width', 1, 1), new Size(0, 0), 0, 0); output.push(new Output(CellDesings.Special3, Orientation.horizontal, DefaultLayouts.none, Paging.centered, new Section('', false), topLayout, featured)); nextRequest = new ModuleRequest('https://tapi.shiro.is/latest' + token, 'get', emptyKeyValue, null);}if (parsedJson.request.url.includes('latest')) { const latest_anime = data.data.latest_animes; const latest_episodes = data.data.latest_episodes; const ongoing_animes = data.data.ongoing_animes; const trending_animes = data.data.trending_animes; for (let la = 0; la < latest_anime.length; la++) { const info = latest_anime[la]; const title = info.name; const image = new ModuleRequest(imageBase + info.image, 'get', emptyKeyValue, null); const link = new ModuleRequest('https://tapi.shiro.is/anime/slug/' + info.slug + token, 'get', emptyKeyValue, null); const type = info.type ? info.type : ''; const rating = info.rating ? info.rating : ''; let obj = new Data(image, title, 'unknown', type + ' - ' + rating, 'unknown', 'unknown', 'unknown', false, link, false); latestAnime.push(obj); } for (let le = 0; le < latest_episodes.length; le++) { const info = latest_episodes[le].anime; const title = info.name; const image = new ModuleRequest(imageBase + info.image, 'get', emptyKeyValue, null); const link = new ModuleRequest('https://tapi.shiro.is/anime/slug/' + info.slug + token, 'get', emptyKeyValue, null); const episode = 'Episode: ' + latest_episodes[le].episode_number; let obj = new Data(image, title, 'unknown', episode, 'unknown', 'unknown', 'unknown', false, link, false); latestEpisodes.push(obj); } for (let oa = 0; oa < ongoing_animes.length; oa++) { const info = ongoing_animes[oa]; const title = info.name; const image = new ModuleRequest(imageBase + info.image, 'get', emptyKeyValue, null); const link = new ModuleRequest('https://tapi.shiro.is/anime/slug/' + info.slug + token, 'get', emptyKeyValue, null); const type = info.type ? info.type : ''; const rating = info.rating ? info.rating : ''; let obj = new Data(image, title, 'unknown', type + ' - ' + rating, 'unknown', 'unknown', 'unknown', false, link, false); ongoingAnime.push(obj); } for (let ta = 0; ta < trending_animes.length; ta++) { const info = trending_animes[ta]; const title = info.name; const image = new ModuleRequest(imageBase + info.image, 'get', emptyKeyValue, null); const link = new ModuleRequest('https://tapi.shiro.is/anime/slug/' + info.slug + token, 'get', emptyKeyValue, null); const type = info.type ? info.type : ''; const rating = info.rating ? info.rating : ''; let obj = new Data(image, title, 'unknown', type + ' - ' + rating, 'unknown', 'unknown', 'unknown', false, link, false); trendingAnime.push(obj); } output.push(new Output(CellDesings.normal7, Orientation.horizontal, DefaultLayouts.longTripletsDouble, Paging.leading, new Section('Latest Anime', true), null, latestAnime)); output.push(new Output(CellDesings.normal7, Orientation.horizontal, DefaultLayouts.longTripletsDouble, Paging.leading, new Section('Latest Episodes', true), null, latestEpisodes)); output.push(new Output(CellDesings.normal7, Orientation.horizontal, DefaultLayouts.longTripletsDouble, Paging.leading, new Section('Ongoing Anime', true), null, ongoingAnime)); output.push(new Output(CellDesings.normal7, Orientation.horizontal, DefaultLayouts.longTripletsDouble, Paging.leading, new Section('Trending Anime', true), null, trendingAnime)); nextRequest = new ModuleRequest('', 'get', emptyKeyValue, null);}let MainPageObject = new MainPage(nextRequest, new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(true, false, ''), output);var finalJson = JSON.stringify(MainPageObject);savedData.innerHTML = finalJson;"
            },
            "output": [
                {
                    "cellDesing": "normal1",
                    "orientation": "vertical",
                    "defaultLayout": "wide",
                    "paging": "",
                    "section": {
                        "sectionName": "",
                        "separator": false
                    },
                    "layout": {
                        "insets": {
                            "top": 0,
                            "bottom": 0,
                            "left": 0,
                            "right": 0
                        },
                        "visibleCellsWidthS": 2,
                        "visibleCellsWidthM": 2,
                        "visibleCellsWidthL": 2,
                        "visibleCellsHeight": 2,
                        "heightForVisibleCells": 400,
                        "cellSize": {
                            "width": 300,
                            "height": 300
                        },
                        "ratio": {
                            "inRelation": "width",
                            "number1": 1,
                            "number2": 2
                        },
                        "constant": {
                            "width": 1,
                            "height": 2
                        },
                        "horizontalSpacing": 0,
                        "verticalSpacing": 0
                    },
                    "data": [
                        {
                            "image": {
                                "url": "",
                                "method": "get",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "httpBody": null
                            },
                            "title": "",
                            "description": "",
                            "field1": "",
                            "field2": "",
                            "field3": "",
                            "field4": "",
                            "openInWebView": false,
                            "isChapter": false,
                            "link": {
                                "url": "",
                                "method": "",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "httpBody": null
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "search": [
        {
            "request": {
                "url": "https://tapi.shiro.is/advanced?search=<searched>&token=Yopgjtcustomer7NX1Oe",
                "method": "get",
                "headers": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "httpBody": null
            },
            "separator": "+",
            "extra": {
                "commands": [
                    {
                        "commandName": "",
                        "params": [
                            {
                                "key": "",
                                "value": ""
                            }
                        ]
                    }
                ],
                "extraInfo": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            },
            "javascriptConfig": {
                "removeJavascript": true,
                "loadInWebView": false,
                "javaScript": "const DefaultLayouts = { ultraWideFull: 'ultraWideFull', ultraWide: 'ultraWide', wideFull: 'wideFull', wide: 'wide', wideStrechedFull: 'wideStrechedFull', wideStrechedFullDouble: 'WideStrechedFullDouble', wideStreched: 'wideStreched', wideStrechedDouble: 'wideStrechedDouble', wideStrechedFullList: 'wideStrechedFullList', wideStrechedList: 'wideStrechedList', doublets: 'doublets', doubletsDouble: 'doubletsDouble', doubletsFull: 'doubletsFull', doubletsFullDouble: 'doubletsFullDouble', doubletsConstant: 'doubletsConstant', doubletsDoubleConstant: 'doubletsDoubleConstant', doubletsFullConstant: 'doubletsFullConstant', doubletsFullDoubleConstant: 'doubletsFullDoubleConstant', longDoublets: 'longDoublets', longDoubletsDouble: 'longDoubletsDouble', longDoubletsFull: 'longDoubletsFull', longDoubletsFullDouble: 'longDoubletsFullDouble', longDoubletsConstant: 'longDoubletsConstant', longDoubletsDoubleConstant: 'longDoubletsDoubleConstant', longDoubletsFullConstant: 'longDoubletsFullConstant', longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant', triplets: 'triplets', tripletsDouble: 'tripletsDouble', tripletsFull: 'tripletsFull', tripletsFullDouble: 'tripletsFullDouble', tripletsConstant: 'tripletsConstant', tripletsDoubleConstant: 'tripletsDoubleConstant', tripletsFullConstant: 'tripletsFullConstant', tripletsFullDoubleConstant: 'tripletsFullDoubleConstant', longTriplets: 'longTriplets', longTripletsDouble: 'longTripletsDouble', longTripletsFull: 'longTripletsFull', longTripletsFullDouble: 'longTripletsFullDouble', longTripletsConstant: 'longTripletsConstant', longTripletsDoubleConstant: 'longTripletsDoubleConstant', longTripletsFullConstant: 'longTripletsFullConstant', longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant', none: ''};const CellDesings = { Special1: 'Special1', Special2: 'Special2', Special3: 'Special3', CELLHelperText: 'CELLHelperText', small1: 'small1', small2: 'small2', normal1: 'normal1', normal2: 'normal2', normal3: 'normal3', normal4: 'normal4', normal5: 'normal5', normal6: 'normal6', normal7: 'normal7', wide1: 'wide1', wide2: 'wide2', wide3: 'wide3', wide4: 'wide4', wide5: 'wide5', wide6: 'wide6', wide7: 'wide7', wide8: 'wide8', wide9: 'wide9', wide10: 'wide10', wide11: 'wide11'};const Paging = { leading: 'leading', centered: 'centered', none: ''};const Orientation = { horizontal: 'horizontal', vertical: 'vertical'};function Search(request, extra, separator, javascriptConfig, output) { this.request = request; this.extra = extra; this.separator = separator; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data;}function Section(sectionName, separator) { this.sectionName = sectionName; this.separator = separator;}function Layout(insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing) { this.insets = insets; this.visibleCellsWidthS = visibleCellsWidthS; this.visibleCellsWidthM = visibleCellsWidthM; this.visibleCellsWidthL = visibleCellsWidthL; this.visibleCellsHeight = visibleCellsHeight; this.heightForVisibleCells = heightForVisibleCells; this.cellSize = cellSize; this.ratio = ratio; this.constant = constant; this.horizontalSpacing = horizontalSpacing; this.verticalSpacing = verticalSpacing;}function Insets(top, bottom, left, right) { this.top = top; this.bottom = bottom; this.left = left; this.right = right;}function Size(width, height) { this.width = width; this.height = height;}function Ratio(inRelation, number1, number2) { this.inRelation = inRelation; this.number1 = number1; this.number2 = number2;}function Data(image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView;}function quickData(link, image, title, field1) { return new Data(image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link);}function shuffle(a) { var j, x, i; for (i = a.length - 1; i > 0; i--) { j = Math.floor(Math.random() * (i + 1)); x = a[i]; a[i] = a[j]; a[j] = x; } return a;}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);let output = [];let results = [];let emptyKeyValue = [new KeyValue('', '')];const token = '?token=Yopgjtcustomer7NX1Oe';const imageBase = 'https://cdn.shiro.is/';let script = document.querySelector('script').innerHTML.replace('/*', '').replace('*/', '');let data = JSON.parse(script);const items = data.data.nav.currentPage.items;for (let index = 0; index < items.length; index++) { const info = items[index]; const title = info.name; const image = new ModuleRequest(imageBase + info.image, 'get', emptyKeyValue, null); const link = new ModuleRequest('https://tapi.shiro.is/anime/slug/' + info.slug + token, 'get', emptyKeyValue, null); const type = info.type ? info.type : 'Anime'; const language = info.language.includes('subbed') ? 'SUB' : 'DUB'; const episodes = 'Eps ' + info.episodeCount; let obj = new Data(image, title, episodes, language, type, 'unknown', 'unknown', false, link); results.push(obj);}let horizontalLayout = new Layout(new Insets(10, 10, 10, 10), 1, 2, 3, 1, 500, new Size(400, 400), new Ratio('width', 4, 11), new Size(0, 0), 10, 10);output.push(new Output(CellDesings.wide11, Orientation.vertical, DefaultLayouts.none, Paging.none, new Section('', false), horizontalLayout, results));let searchPageObject = new Search(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), '', new JavascriptConfig(true, false, ''), output);var finalJson = JSON.stringify(searchPageObject);savedData.innerHTML = finalJson;"
            },
            "output": [
                {
                    "cellDesing": "normal1",
                    "orientation": "vertical",
                    "defaultLayout": "wide",
                    "paging": "",
                    "section": {
                        "sectionName": "",
                        "separator": false
                    },
                    "layout": {
                        "insets": {
                            "top": 0,
                            "bottom": 0,
                            "left": 0,
                            "right": 0
                        },
                        "visibleCellsWidthS": 2,
                        "visibleCellsWidthM": 2,
                        "visibleCellsWidthL": 2,
                        "visibleCellsHeight": 2,
                        "heightForVisibleCells": 400,
                        "cellSize": {
                            "width": 300,
                            "height": 300
                        },
                        "ratio": {
                            "inRelation": "width",
                            "number1": 1,
                            "number2": 2
                        },
                        "constant": {
                            "width": 1,
                            "height": 2
                        },
                        "horizontalSpacing": 0,
                        "verticalSpacing": 0
                    },
                    "data": [
                        {
                            "image": {
                                "url": "",
                                "method": "get",
                                "headers": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ],
                                "httpBody": null
                            },
                            "title": "",
                            "description": "",
                            "field1": "",
                            "field2": "",
                            "field3": "",
                            "field4": "",
                            "openInWebView": false,
                            "isChapter": false,
                            "link": {
                                "url": "empty",
                                "method": "get",
                                "headers": [
                                    {
                                        "key": "key",
                                        "value": "value"
                                    }
                                ],
                                "httpBody": null
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "info": [
        {
            "request": {
                "url": "",
                "method": "get",
                "headers": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "httpBody": null
            },
            "extra": {
                "commands": [
                    {
                        "commandName": "",
                        "params": [
                            {
                                "key": "",
                                "value": ""
                            }
                        ]
                    }
                ],
                "extraInfo": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            },
            "javascriptConfig": {
                "removeJavascript": true,
                "loadInWebView": false,
                "javaScript": "function Info(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Chapter(chapName, link, openInWebView) { this.chapName = chapName; this.link = link; this.openInWebView = openInWebView;}function Output(image, title, link, description, genres, field1, field2, field3, field4, chapters) { this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.chapters = chapters;}function getStuff(array, match) { for (var x = 0; x < array.length; x++) { let data = array[x].innerText; if (data.includes(match)) { return data.replace(match, '').trim(); } }}function getHtmlStuff(array, match) { for (var x = 0; x < array.length; x++) { let data = array[x].innerText; if (data.includes(match)) { return array[x]; } }}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);let emptyKeyValue = [new KeyValue('', '')];const token = '?token=Yopgjtcustomer7NX1Oe';const imageBase = 'https://cdn.shiro.is/';const script = document.querySelector('script').innerHTML.replace('/*', '').replace('*/', '');const data = JSON.parse(script);const info = data.data;var episodes = [];var type = info.type ? info.type : 'Anime';var status = info.status ? info.status : 'Unknown';var genres = info.genres ? info.genres : [];var desc = info.synopsis ? info.synopsis : 'No description';var title = info.name;var rating = info.rating ? info.rating : '';var image = imageBase + info.image;image = new ModuleRequest(image, 'get', emptyKeyValue, null);let eps_num = [];for (let index = 0; index < info.episodes.length; index++) { const element = info.episodes[index]; if (eps_num.includes(element.episode_number)) { continue; } eps_num.push(element.episode_number); const name = 'Episode ' + element.episode_number; const link = new ModuleRequest('https://tapi.shiro.is/anime-episode/slug/' + element.slug + token, 'get', emptyKeyValue, null); const obj = new Chapter(name, link, false); episodes.push(obj);}let infoPageObject = new Info(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(false, false, ''), new Output(image, title, parsedJson.request, desc, genres, status, rating, type, 'Eps: ' + episodes.length, episodes));var finalJson = JSON.stringify(infoPageObject);savedData.innerHTML = finalJson;"
            },
            "output": {
                "image": {
                    "url": "",
                    "method": "get",
                    "headers": [
                        {
                            "key": "",
                            "value": ""
                        }
                    ],
                    "httpBody": null
                },
                "link": {
                    "url": "",
                    "method": "get",
                    "headers": [
                        {
                            "key": "",
                            "value": ""
                        }
                    ],
                    "httpBody": null
                },
                "title": "",
                "description": "",
                "genres": [
                    ""
                ],
                "field1": "",
                "field2": "",
                "field3": "",
                "field4": "",
                "chapters": [
                    {
                        "chapName": "",
                        "openInWebView": false,
                        "link": {
                            "url": "empty",
                            "method": "get",
                            "headers": [
                                {
                                    "key": "key",
                                    "value": "value"
                                }
                            ],
                            "httpBody": null
                        }
                    }
                ]
            }
        }
    ],
    "chapters": [
        {
            "request": {
                "url": "",
                "method": "get",
                "headers": [
                    {
                        "key": "key",
                        "value": "value"
                    }
                ],
                "httpBody": null
            },
            "extra": {
                "commands": [
                    {
                        "commandName": "",
                        "params": [
                            {
                                "key": "",
                                "value": ""
                            }
                        ]
                    }
                ],
                "extraInfo": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            },
            "javascriptConfig": {
                "removeJavascript": true,
                "loadInWebView": false,
                "javaScript": "function Chapters(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(videos, images, text) { this.videos = videos; this.images = images; this.text = text;}function Videos(needsResolver, rawVideo) { this.needsResolver = needsResolver; this.rawVideo = rawVideo;}function NeedsResolver(resolverIdentifier, link) { this.resolverIdentifier = resolverIdentifier; this.link = link;}function RawVideo(video) { this.video = video;}function Video(videoQuality, videoLink) { this.videoQuality = videoQuality; this.videoLink = videoLink;}function Text(text) { this.text = text;}var output = [];var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);var emptyKeyValue = [new KeyValue('Referer', 'https://shiro.is/')];const script = document.querySelector('script').innerHTML.replace('/*', '').replace('*/', '');const data = JSON.parse(script);const info = data.data;const domain = 'https://cherry.subsplea.se/';let subsplease = new NeedsResolver('Subsplease', new ModuleRequest(domain + info.videos[0].video_id, 'get', emptyKeyValue, null));let gogo = new NeedsResolver('GOGOSHIRO', new ModuleRequest(`https://gogo-stream.com/ajax.php?id=${info.videos[0].video_id}&refer=https://shiro.is/`, 'get', emptyKeyValue, null));output.push(subsplease);output.push(gogo);let emptyExtra = new Extra([new Commands('', emptyKeyValue)], emptyKeyValue);var chaptersObject = new Chapters(new ModuleRequest('', '', emptyKeyValue, null), emptyExtra, new JavascriptConfig(false, false, ''), new Output(new Videos(output, null), null, null));var finalJson = JSON.stringify(chaptersObject);savedData.innerHTML = finalJson;"
            },
            "output": {
                "videos": {
                    "needsResolver": [
                        {
                            "resolverIdentifier": "",
                            "link": {
                                "url": "",
                                "method": "get",
                                "headers": [
                                    {
                                        "key": "key",
                                        "value": "value"
                                    }
                                ],
                                "httpBody": null
                            }
                        }
                    ],
                    "rawVideo": [
                        {
                            "video": [
                                {
                                    "videoQuality": "",
                                    "videoLink": {
                                        "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                                        "method": "get",
                                        "headers": [
                                            {
                                                "key": "key",
                                                "value": "value"
                                            }
                                        ],
                                        "httpBody": null
                                    }
                                }
                            ]
                        }
                    ]
                },
                "images": [
                    {
                        "url": "empty",
                        "method": "get",
                        "headers": [
                            {
                                "key": "key",
                                "value": "value"
                            }
                        ],
                        "httpBody": null
                    }
                ],
                "text": {
                    "text": ""
                }
            }
        }
    ],
    "moduleResolvers": [
        {
            "resolverInfo": {
                "resolverName": "SUBSPLEASE",
                "nameMatches": [
                    "SUBSPLEASE"
                ],
                "developer": "Jack_",
                "moduleID": "cOd8rjCrzcA",
                "resolverVersion": 1,
                "baseURL": ""
            },
            "resolver": [
                {
                    "request": {
                        "url": "",
                        "method": "get",
                        "headers": [
                            {
                                "key": "key",
                                "value": "value"
                            }
                        ],
                        "httpBody": null
                    },
                    "extra": {
                        "commands": [
                            {
                                "commandName": "",
                                "params": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ]
                            }
                        ],
                        "extraInfo": [
                            {
                                "key": "",
                                "value": ""
                            }
                        ]
                    },
                    "javascriptConfig": {
                        "removeJavascript": false,
                        "loadInWebView": false,
                        "javaScript": "function Resolver(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(video) { this.video = video;}function Video(videoQuality, videoLink) { this.videoQuality = videoQuality; this.videoLink = videoLink;}function getNext(match, array) { for (var x = 0; x < array.length; x++) { let mMatch = array[x]; if (mMatch.includes(match)) { return array[x + 1]; } }}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);var emptyKeyValue = [new KeyValue('Referer', parsedJson.request.url)];var videos = [];var vid = document.querySelector('#player > source').src;videos.push(new Video('Normal', new ModuleRequest(vid, 'get', emptyKeyValue, null)));var chaptersObject = new Resolver(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(false, false, ''), new Output(videos));var finalJson = JSON.stringify(chaptersObject);savedData.innerHTML = finalJson;"
                    },
                    "output": {
                        "moduleID": "",
                        "video": [
                            {
                                "videoQuality": "720",
                                "videoLink": {
                                    "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                                    "method": "get",
                                    "headers": [
                                        {
                                            "key": "key",
                                            "value": "value"
                                        }
                                    ],
                                    "httpBody": null
                                }
                            }
                        ]
                    }
                }
            ]
        },
        {
            "resolverInfo": {
                "resolverName": "GOGOSHIRO",
                "nameMatches": [
                    "GOGOSHIRO"
                ],
                "developer": "Jack_",
                "moduleID": "VVXZW5ItucF",
                "resolverVersion": 1,
                "baseURL": ""
            },
            "resolver": [
                {
                    "request": {
                        "url": "",
                        "method": "get",
                        "headers": [
                            {
                                "key": "key",
                                "value": "value"
                            }
                        ],
                        "httpBody": null
                    },
                    "extra": {
                        "commands": [
                            {
                                "commandName": "",
                                "params": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ]
                            }
                        ],
                        "extraInfo": [
                            {
                                "key": "",
                                "value": ""
                            }
                        ]
                    },
                    "javascriptConfig": {
                        "removeJavascript": false,
                        "loadInWebView": false,
                        "javaScript": "function Resolver(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(video) { this.video = video;}function Video(videoQuality, videoLink) { this.videoQuality = videoQuality; this.videoLink = videoLink;}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);var emptyKeyValue = [new KeyValue('Referer', parsedJson.request.url)];var videos = [];const script = document.querySelector('script').innerHTML.replace('/*', '').replace('*/', '');const data = JSON.parse(script);if (data.source.length != 0) { videos.push(new Video(data.source[0].label, new ModuleRequest(data.source[0].file, 'get', emptyKeyValue, null)));} else if (data.source_bk.length != 0) { videos.push(new Video(data.source_bk[0].label, new ModuleRequest(data.source_bk[0].file, 'get', emptyKeyValue, null)));}var chaptersObject = new Resolver(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(false, false, ''), new Output(videos));var finalJson = JSON.stringify(chaptersObject);savedData.innerHTML = finalJson;"
                    },
                    "output": {
                        "moduleID": "",
                        "video": [
                            {
                                "videoQuality": "720",
                                "videoLink": {
                                    "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                                    "method": "get",
                                    "headers": [
                                        {
                                            "key": "key",
                                            "value": "value"
                                        }
                                    ],
                                    "httpBody": null
                                }
                            }
                        ]
                    }
                }
            ]
        }
    ],
    "responseCodeFunctions": [
        {
            "code": 0,
            "msgTitle": "",
            "msgBody": "",
            "type": "normal",
            "functions": [
                {
                    "request": {
                        "url": "empty",
                        "method": "get",
                        "headers": [
                            {
                                "key": "key",
                                "value": "value"
                            }
                        ],
                        "httpBody": null
                    },
                    "extra": {
                        "commands": [
                            {
                                "commandName": "",
                                "params": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ]
                            }
                        ],
                        "extraInfo": [
                            {
                                "key": "",
                                "value": ""
                            }
                        ]
                    },
                    "javascriptConfig": {
                        "removeJavascript": true,
                        "loadInWebView": false,
                        "javaScript": ""
                    }
                }
            ]
        }
    ],
    "helperFunctions": [
        {
            "functionName": "example",
            "msgTitle": "",
            "msgBody": "",
            "type": "normal",
            "functions": [
                {
                    "request": {
                        "url": "empty",
                        "method": "get",
                        "headers": [
                            {
                                "key": "key",
                                "value": "value"
                            }
                        ],
                        "httpBody": null
                    },
                    "extra": {
                        "commands": [
                            {
                                "commandName": "",
                                "params": [
                                    {
                                        "key": "",
                                        "value": ""
                                    }
                                ]
                            }
                        ],
                        "extraInfo": [
                            {
                                "key": "",
                                "value": ""
                            }
                        ]
                    },
                    "javascriptConfig": {
                        "removeJavascript": true,
                        "loadInWebView": false,
                        "javaScript": ""
                    }
                }
            ]
        }
    ]
}